::
::::
  ::
/?    314
/=    gas    /$    fuel
::
::::  sivtyv-barnel
  ::
  !:

^-  manx

;html
  ;head
    ;title: Foosball Standings and Statistics
    ;script@"/gop/hart.js";        :: ask eyre for port number 
    ;script@"/gen/main/lib/urb.js"; :: urb js lib
    ;script@"https://cdnjs.cloudflare.com/ajax/libs/jquery/2.1.3/jquery.js";  ::jquery
    ;script@"http://fb.me/react-0.12.2.js";
    ;script@"fakefoos/reactscript.js";
  ==
  ;body
    ;div.recordfixture
      ;input#bcons: Black Contestant
      ;input#ycons: Yellow Contestant
      ;input#bscore: Black Score
      ;input#yscore: Yellow Score
      ;button#entrees: Enter Result
      ;script:'''
              $(entrees).click(function(){
                var bscr = parseInt(bscore.value)
                var yscr = parseInt(yscore.value)
                if(bcons.value == '' || ycons.value == '' || bscr == '' || yscr == '')
                  {alert('Please Fill Out All Fields'); return}
                if(isValid(bscr, yscr)){  //check for valid scoreline
                  urb.send({
                    appl: "foos",
                    data: {bcons:bcons.value, ycons:ycons.value, bscore:bscr, yscore:yscr},
                    mark: "json"
                  })
                  newFixturesList = mounted.props.fixturesList.slice();
                  newFixturesList.push({bcons: bcons.value, ycons: ycons.value, 
                                        bscore: bscr, yscore: yscr}) //Dont forget to send object
                  mounted.setProps({fixturesList: newFixturesList})
                }else {alert('Please Enter a Valid Scoreline')}
              })
              isValid = function(bscore, yscore){
                if(validRange(bscore) && validRange(yscore)){
                  if(bscore == 10 || yscore == 10){
                    if(yscore == 10 && bscore == 10) return false
                    return true
                  } else return false
                } else return false
              }
              validRange = function(score){
                if(score < 0 || score > 10) return false
                return true
              }
              '''
    ==
    ;div#bindto;
    ;script:'''
            mounted = React.render(
             Page({players: [], fixturesList: [] }), bindto)
             urb.subscribe({
              appl: "foos",
              path: "/"
             }, function(err, d){
              if (d.data.ok) return;
              mounted.setProps({fixturesList:d.data})
             })
            '''
  ==
==

